import streamlit as st

from clusterization_background import *


st.set_page_config(
        page_title = "Clusteriza√ß√£o",
        page_icon = "üéØ",
        layout="wide",
    )

st.title(
    "üéØ Clusteriza√ß√£o"
)

# Gallego (G*)
st.markdown("## 1. Introdu√ß√£o ao Banco de Dados")
st.markdown(
    """
    <p style = "text-align:justify;">
    Este dataset cont√©m um hist√≥rico de vendas de uma rede de supermercados, com registros de 3 filiais durante um per√≠odo de 3 meses. A riqueza de detalhes fornecidos permite a aplica√ß√£o de m√©todos anal√≠ticos preditivos, facilitando a extra√ß√£o de insights valiosos sobre o comportamento de compra dos clientes e o desempenho das vendas. Os dados incluem informa√ß√µes como o tipo de cliente (membros ou n√£o-membros), localiza√ß√£o das filiais, categorias de produtos comprados, formas de pagamento, al√©m de detalhes financeiros como o pre√ßo por unidade, quantidade de itens comprados e o total gasto, incluindo impostos.
    
    Outros aspectos, como o custo dos produtos vendidos (COGS), margem de lucro, e uma avalia√ß√£o da experi√™ncia de compra dos clientes, tamb√©m est√£o presentes. Esse conjunto de dados √© ideal para an√°lises que buscam otimizar estrat√©gias de marketing, melhorar a gest√£o de estoque e aumentar a satisfa√ß√£o dos clientes. Ao explorar padr√µes como sazonalidade, prefer√™ncias de produto e influ√™ncias de promo√ß√µes, √© poss√≠vel desenvolver estrat√©gias mais informadas para impulsionar o crescimento e a efici√™ncia operacional do supermercado.
    </p>
    """,unsafe_allow_html= True
)

st.markdown("## 2. O m√©todo do cotovelo ")
st.markdown(
    """
    <p style = "text-align:justify;">
    A clusteriza√ß√£o √© um processo de agrupamento de dados de acordo com caracter√≠sticas que eles compartilham. No caso deste projeto, foi utilizado
    o K-means, um algoritmo de aprendizado n√£o supervisionado que, definido um n√∫mero de agrupamentos (fornecido como dado de entrada), agrupa os dados
    de acordo com os padr√µes intr√≠nsecos ao conjunto de dados.
    </p>


    <p style = "text-align:justify;">
    Nesse sentido, para se determinar o n√∫mero √≥timo de <i>clusters</i>, foi aplicado o <b>M√©todo do Cotovelo</b>, que, em sua ess√™ncia, √© uma itera√ß√£o 
    do K-means para diferentes n√∫meros de agrupamentos, de modo que o crit√©rio que define a otimalidade √© a <b>in√©rcia</b>, um resultado que pode ser extra√≠do do 
    pr√≥prio modelo. √â gerado, ap√≥s a itera√ß√£o, um conjunto de dados da in√©rcia associada ao n√∫mero de agrupamentos respectivo, que pode ser interpretado como pares ordenados em um plano cartesiano, 
    de modo que o ponto que indica o n√∫mero √≥timo de <i>clusters</i> √© aquele que mais dista da reta que une o primeiro e o √∫ltimo pontos da s√©rie. Portanto, √© poss√≠vel utilizar
    equacionamentos da geometria anal√≠tica para determinar a dist√¢ncia dos pontos em rela√ß√£o a essa reta.

    </p>
    """, unsafe_allow_html= True
)

st.markdown(
    """
    <p style = "text-align:justify;">
    A Equa√ß√£o de uma reta √© dada por
    </p>

    """, unsafe_allow_html= True
)

st.latex(r'''
\begin{equation}
0 = A\cdot{x}+B\cdot{y} + C  ,
\end{equation}

''')

st.markdown(
    """
    <p style = "text-align:justify;">
    Em que <i>A</i>, <i>B</i> e <i>C</i> s√£o coeficientes a serem determinados.
    </p>

    """, unsafe_allow_html= True
)

st.markdown(
    """
    <p style = "text-align:justify;">
    J√° a equa√ß√£o do coeficiente angular de uma reta √©
    </p>

    """, unsafe_allow_html= True
)

st.latex(r'''
\begin{equation}
m = \frac{y_2-y_1}{x_2-x_1} ,
\end{equation}
''')

st.markdown(
    """
    <p style = "text-align:justify;">
    assumindo que a diferen√ßa no denominador √© diferente de zero, ou seja, que os pontos s√£o distintos e quaisquer.
    </p>

    """, unsafe_allow_html= True

)


st.markdown(
    """
    <p style = "text-align:justify;">
    Tem-se, ent√£o, que:
    </p>

    """, unsafe_allow_html= True
)

st.latex(r'''
\begin{equation}
A = -m,
\end{equation}
''')
st.latex(r'''
\begin{equation}
B = 1,
\end{equation}''')
st.latex(r'''
\begin{equation}
C = -y_0 + m\cdot{x_0} .
\end{equation} 
''')

st.markdown(
    """
    <p style = "text-align:justify;">
    Ap√≥s encontrar os coeficientes associados √† reta que passa pelos os pontos inicial e final do conjunto de pares ordenados previamente gerado 
    (por meio das equa√ß√µes 3 √† 5), √© poss√≠vel aplicar a equa√ß√£o 
    </p>

    """, unsafe_allow_html= True

)

st.latex(r'''
\begin{equation}
d = \frac{|Ax_1 + By_1 + C|}{\sqrt{A^2 + B^2}}
\end{equation}
''')

st.markdown(
    """
    <p style = "text-align:justify;">
    para determinar a dist√¢ncia dos demais pontos da s√©rie em rela√ß√£o a ela e, ent√£o, selecionar o ponto cuja dist√¢ncia √© a maior. 
    </p>

    """, unsafe_allow_html= True

)

st.markdown(
    """
    <p style = "text-align:justify;">
    Todo esse procedimento pode ser consolidado na seguinte fun√ß√£o: 
    </p>

    """, unsafe_allow_html= True

)

st.code(
    """
    from sklearn.cluster import KMeans
    from math import sqrt
    import pandas as pd


    def elbow_method(df, criteria):
    '''
    Fun√ß√£o que retorna o n√∫mero √≥timo de clusters para determinado dataframe.

    Input:
    - df: dataframe a ser utilizado na clusteriza√ß√£o;
    - criteria: lista de crit√©rios segundo a qual ser√° feita a clusteriza√ß√£o (e.g: ['Rating', 'Quantity'])

    Output: n√∫mero √≥timo de clusters
    '''
     # Calculando os valores de in√©rcia numericamente, dado um crit√©rio de parada de 0.01
        n = [2]
        inertia_values = []  # valores de in√©rcia
        inertia_diff = []    # valores de diferen√ßas de in√©rcia
    
        while True:   # loop para o c√°lculo de dos valores de in√©rcia enquanto houver diferen√ßa maior que 1 entre as √∫ltimas duas in√©rcias
            if n[-1] == 2:
            kmeans = KMeans(n_clusters = n[-1])
            kmeans.fit(df[criteria])
            inertia = kmeans.inertia_
            inertia_values.append(inertia)
            n.append(n[-1]+1)
            elif n[-1] > 2:
            kmeans = KMeans(n_clusters = n[-1])
            kmeans.fit(df[criteria])
            inertia = kmeans.inertia_
            inertia_values.append(inertia)
            inertia_diff.append(abs(inertia_values[-2] - inertia_values[-1]))
            if inertia_diff[-1] <= 1:
                break
            else:
                n.append(n[-1] + 1)
                continue
        # Encontrando a equa√ß√£o da reta associada ao primeiro e ao √∫ltimo pontos:
        x_0, y_0 = n[0], inertia_values[0]    # primeiro ponto do gr√°fico
        x_n, y_n = n[-1], inertia_values[-1]  # √∫ltimo ponto do gr√°fico

        m = (y_n - y_0)/(x_n-x_0)   # Coeficiente angular

        # Par√¢metros da Reta
        C = -(y_0 + m*(-x_0))
        A = -m
        B = 1

        # Encontrando todos os pontos do gr√°fico
        points = list(zip(n, inertia_values))

        #Aplicando a f√≥rmula da dist√¢ncia para TODOS os pontos de points:
        d = []
        for i in points:
            x_1, y_1 = i[0], i[1]
            d.append((abs(A*x_1 + B*y_1 + C)/(sqrt(A**2+B**2))))
        argmax = d.index(max(d))
        optimal_n = points[d.index(max(d))][0]
        return optimal_n
     
    """)
 
st.markdown("## 3. Faixa de gastos priorit√°ria")

st.markdown(
    """
    <p style = "text-align:justify;">
    O objetivo dessa an√°lise foi determinar a faixa de gastos que gera a maior receita para a franquia como um todo (aqui, n√£o 
    foram aplicados filtros por cidade, produto ou tempo, como no caso do dashboard). Para tal, foi aplicado o m√©todo do cotovelo e o K-Means para gerar
    um gr√°fico que separa todas as transa√ß√µes em categorias, associadas ao total gasto e ao Rating. O resultado gerado foi o seguinte:
    </p>
    """, unsafe_allow_html= True
)

st.plotly_chart(fig_2, use_container_width=True, config = {'displayModeBar':False})

st.markdown(
    """
    <p style = "text-align:justify;">
    As informa√ß√µes sobre as <i>labels</i> foram, ent√£o, consolidadas em um dataframe mostra qual faixa √© de gastos √© a que mais gera retorno para o 
    supermercado:
    """, unsafe_allow_html= True
)

st.table(consolidatedinfo_label)

st.markdown(
    """
    <p style = "text-align:justify;">
    Portanto, pode-se concluir que a faixa de pre√ßos associada √†s maiores receitas <b>n√£o</b> √© aquela que se associa aos maiores gastos, porque estes n√£o s√£o
    mantidos por um elevado numero de clientes (vide tabela). Uma estrat√©gia que pode ser desenvolvida com essa an√°lise √© a cria√ß√£o de um programa de benef√≠cios para atrair
    para atrair mais clientes para essa zona de pre√ßos, por exemplo.
    </p>
    """, unsafe_allow_html= True
)

# Raissa (G*)

st.markdown("## 4. Pre√ßo unit√°rio e quantidade comparada")

st.markdown(
    """
    <p style = "text-align:justify;">
    A clusteriza√ß√£o realizada considera a distribui√ß√£o dos dados ao longo de duas vari√°veis: "Pre√ßo Unit√°rio" e "Quantidade Comprada". Atrav√©s dela √© poss√≠vel correlacionar os tipos de clientes que frequentam o mercado em quest√£o, considerando a escolha do produto comprado atrav√©s do pre√ßo e da quantidade.

    O gr√°fico apresenta quatro clusters, ou seja, apresenta quatro principais tipos de clientes do supermercado. Ao comparar os grupos mais "extremos" apresentados, √© poss√≠vel perceber a diverg√™ncia na rela√ß√£o pre√ßo-quantidade. O cluster 0, em tom claro, representa as pessoas que, se comprarem produtos com pre√ßos elevados, ir√£o adquirir uma pequena quantidade de itens; ou, caso os produtos escolhidos possuam pre√ßos unit√°rios menores, ir√£o optar por lev√°-los em maior quantidade.

    J√° o cluster 3, em tom azul escuro, representa os clientes que adquirem produtos de acordo com uma rela√ß√£o diretamente proporcional entre pre√ßo e quantidade, uma vez que, caso optem por adquirir produtos mais caros, a quantidade comprada ser√° alta tamb√©m; da mesma forma, caso o pre√ßo unit√°rio do produto seja inferior, sua quantidade adquirida tamb√©m ser√°.

    Ainda, atrav√©s da an√°lise gr√°fica √© poss√≠vel realizar algumas conclus√µes mais pontuais. Por exemplo, os produtos que apresentam um pre√ßo intermedi√°rio distribuem-se em diferentes clusters, o que pode indicar que esses produtos podem atrair clientes com diferentes perfis de compra.
    </p>
    """, unsafe_allow_html= True
)

last_fig = consolidation_final()
st.plotly_chart(last_fig)

st.markdown("## 5. Conclus√µes")

st.markdown(
    """
    <p style = "text-align:justify;">
    Com base na primeira an√°lise, conclu√≠mos que a faixa de pre√ßos que gera maior receita n√£o √© necessariamente associada aos maiores gastos individuais, pois clientes que gastam mais representam uma parcela menor do total. Uma estrat√©gia sugerida seria a cria√ß√£o de programas de benef√≠cios para atrair mais clientes para essa faixa de pre√ßos mais elevada, aumentando o volume de transa√ß√µes e, consequentemente, as receitas da franquia.
    
    Al√©m disso, a an√°lise dos comportamentos de compra revelou que os quatro clusters de clientes apresentam rela√ß√µes distintas entre pre√ßo e quantidade, com o Cluster 0 indicando uma prefer√™ncia por comprar menos itens de produtos caros e mais itens de produtos baratos, enquanto o Cluster 3 demonstra uma disposi√ß√£o para gastar mais em produtos de maior valor. Assim, para maximizar os lucros, o supermercado deve implementar estrat√©gias que incentivem um maior n√∫mero de clientes a se envolverem com produtos em faixas de pre√ßo intermedi√°rias, onde h√° diversidade de perfis. A combina√ß√£o dessas an√°lises sugere que programas de benef√≠cios e promo√ß√µes espec√≠ficas podem aumentar a atratividade dessas faixas de pre√ßos, estimulando mais clientes a gastar, o que potencialmente otimiza as receitas globais da franquia.
    </p>
    """, unsafe_allow_html= True
)
